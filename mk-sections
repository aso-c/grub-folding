#! /bin/bash

#
# Generate Section files with specified parameters
# Copyright (c) aso, v.0.4, 17.07.14


_dev=1
export _dev

. ./folding

sec_auth='aso'
sec_date='17.07.2014'
sec_ver='2.1.3'

os_idx=( 'gen', 'win' )

gen_sect=( 'gen' 'Gentoo'
#( 'submenu "Gentoo Linux (all variants)" {', '}' )
#( 'mk_shdr "Gentoo Linux"', 'mk_sftr "Gentoo"' )
'mk_sechdr "${gen_sect[1]} Linux"' 'mk_secftr "${gen_sect[1]}"'
) # gen_sect

win_sect=( 'win' 'MS Windows'
#( 'submenu "MS Windows (all variants)" {', '}' )
#( 'mk_shdr "MS Windows"', 'mk_sftr "MS Windows"' )
  'mk_sechdr "${win_sect[1]} Linux"', 'mk_secftr "${win_sect[1]}"'
) # win_sect

# Print section header
# Parameler - full OS name
mk_sechdr() {
  echo "submenu \"$1 (all variants) {\""
}

# Print section footer
# Parameler - full OS name
mk_secftr() {
  echo "} # end of $1 section"
}


mk-sect()
{

#	local os=$1
	local fullos="$1_sect[1]"
	local stage=$2
	local stgidx=0	# for prologue (by default)
#	tst="$1_sect[*]"
#	local ${!tst}
	local s_name="$1_sect[@]"
	local sect=( "${!s_name}" )
#	local sect=''
#	eval "sect=( \${$1_sect[@]} )"

    if [ "${2}n" == 'epin' ]; then
	stgidx=1
    fi

echo "stgidx is: $stgidx" >&2
echo "Full OS is: $fullos" >&2
echo "Full OS name is: ${!fullos}" >&2
#echo "Full tst is: ${!tst}" >&2
#echo "tst[1] is: ${!tst[1]}" >&2
echo "section is: ${sect[@]}" >&2

    cat << COFR
#! /bin/sh
set -e

## grub-mkconfig helper script.
## Copyright (c) 2012-2014 Andrey A. Solomatov (aso).
## This is free software: it licensed under the terms of the GNU GPL,
## either version 3 or, at your option, any later version and can be
## redistribute and/or modify free.
##
## This file is automatically generated by the 'mk-sections' scripts.
##
## Copyright (C) 2006,2007,2008,2009,2010  Free Software Foundation, Inc.
##
## GRUB is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## GRUB is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GRUB.  If not, see <http://www.gnu.org/licenses/>.

####################################################
#
# ${!fullos} section ${stage}logue GRUB configuration file
# ${sect[1]} section ${stage}logue GRUB configuration file
# v.${sec_ver} from ${sec_date}. by ${sec_auth}
#
# -i, --insert            insert section data into stdout
# -x, --exclude           exclude folding header
# -h, --help              print this message and exit
# -v, --version           print the version information and exit
#
####################################################

ver='${sec_ver}'
date='${sec_date}'
version="v.\$ver, from \$date by ${sec_auth}"


usage()
{
    cat <<EOF
_${1}-${2}log: grub-mkconfig helper script.
version \$version
Insert ${!fullos} section ${2}logue into GRUB configuration file
Usage: _${1}-${2}log [OPTIONS]

  -i, --insert            output section data into stdout
  -x, --exclude           exclude folding header
  -h, --help              print this message and exit
  -v, --version           print the version information and exit

Combined short options are allowed.
EOF
} # usage() --------------------------------------

_insert=0
_exclude=0

# Processing the arguments.
while getopts hvix f
do
    case $f in
    h | --help)
	usage
	exit 2 ;;
    v | --version)
	echo $version
	exit 1 ;;
    i | --insert)
	_insert=1
	;;
    x | --exclude)
	_exclude=1
	;;
    esac
done
shift $(($OPTIND - 1))

# Don't change the next "if" operator
if [ ${_insert} = 0 ] ; then
  echo "# This is a gentoo section prologue stub"
  echo "# This is a test version."
  echo "# $version"
  exit
fi


echo "Start ${!fullos} folding section in menu" >&2

# User code section 1 >>>------------------------
# Insert user code here, between this lines, code placed out of section, before section header

# End of user code section <<<-------------------

# Insert ${!fullos} section header if needed
if  [ "${_exclude}" = 0 ] ; then
    echo 'submenu "Gentoo Linux (all vaiants)" {'
    echo 'submenu "Gentoo Linux (all vaiants)" {'
fi

# User code section 2 >>>------------------------
# Insert user code below this line, code placed in section after header >>>-----------------

# My insertion - aso
# Gentoo section - Universal entry from Gentoo Legacy Grub
cat << EOF
# Custom entry for the own Gentoo Legasy GRUB booting.
menuentry "Gentoo Linux (all variants, on /dev/sda5)" --class gnu-linux --class gnu --class os {
	insmod part_msdos
	insmod ext2
	set root='(hd2,msdos2)'
	search --no-floppy --fs-uuid --set=root 20e9f929-3d53-4814-abbd-2e0a38e0eaae
	drivemap -s (hd2) (hd0)
	chainloader +1
}
EOF
COFR

} # mk-sect() -----------------------------------------------------------------



# work definitions

p='pro' 	# for prologu stage
e='epi' 	# for epilogue stage 

echo '### Generating section file >>>>-------------------------' >&2

mk-sect win $e
mk-sect gen $e
